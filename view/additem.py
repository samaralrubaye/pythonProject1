# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\samar\Desktop\finalyearproject\pythonProject1\view\additem.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



from PyQt5 import QtCore, QtGui, QtWidgets
import sys
import time

from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QMainWindow, QApplication, QWidget, QPushButton, QAction, QLineEdit, QMessageBox
from PyQt5.QtGui import QIcon
from PyQt5.QtCore import pyqtSlot
from PIL import ImageGrab


class Ui_Evidance(object):
    def setupUi(self, Evidance):
        Evidance.setObjectName("Evidance")
        Evidance.resize(891, 587)
        self.lbl_CaseNumber = QtWidgets.QLabel(Evidance)
        self.lbl_CaseNumber.setGeometry(QtCore.QRect(50, 30, 131, 51))
        self.lbl_CaseNumber.setLineWidth(3)
        self.lbl_CaseNumber.setObjectName("lbl_CaseNumber")
        self.label = QtWidgets.QLabel(Evidance)
        self.label.setGeometry(QtCore.QRect(50, 90, 151, 20))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Evidance)
        self.label_2.setGeometry(QtCore.QRect(50, 120, 151, 20))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(Evidance)
        self.label_3.setGeometry(QtCore.QRect(50, 160, 101, 31))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(Evidance)
        self.label_4.setGeometry(QtCore.QRect(70, 360, 71, 31))
        self.label_4.setObjectName("label_4")
        self.LnEdtCaseNumber = QtWidgets.QLineEdit(Evidance)
        self.LnEdtCaseNumber.setGeometry(QtCore.QRect(220, 50, 471, 22))
        self.LnEdtCaseNumber.setObjectName("LnEdtCaseNumber")
        self.lnEdtEvidanceNumber = QtWidgets.QLineEdit(Evidance)
        self.lnEdtEvidanceNumber.setGeometry(QtCore.QRect(220, 90, 471, 22))
        self.lnEdtEvidanceNumber.setObjectName("lnEdtEvidanceNumber")
        self.lineEdtUniqueDesicription = QtWidgets.QLineEdit(Evidance)
        self.lineEdtUniqueDesicription.setGeometry(QtCore.QRect(220, 120, 471, 22))
        self.lineEdtUniqueDesicription.setObjectName("lineEdtUniqueDesicription")
        self.lnEdtExaminer = QtWidgets.QLineEdit(Evidance)
        self.lnEdtExaminer.setGeometry(QtCore.QRect(220, 160, 471, 22))
        self.lnEdtExaminer.setObjectName("lnEdtExaminer")
        self.textEdit = QtWidgets.QTextEdit(Evidance)
        self.textEdit.setGeometry(QtCore.QRect(150, 370, 591, 141))
        self.textEdit.setObjectName("textEdit")
        self.btnBack = QtWidgets.QPushButton(Evidance)
        self.btnBack.setGeometry(QtCore.QRect(150, 550, 93, 28))
        self.btnBack.setObjectName("btnBack")
        self.pushButton = QtWidgets.QPushButton(Evidance)
        self.pushButton.setGeometry(QtCore.QRect(640, 550, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Evidance)
        self.pushButton_2.setGeometry(QtCore.QRect(90, 210, 131, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        self.lnEdtPath = QtWidgets.QLineEdit(Evidance)
        self.lnEdtPath.setGeometry(QtCore.QRect(220, 210, 471, 31))
        self.lnEdtPath.setObjectName("lnEdtPath")
        self.lineEdtImageName = QtWidgets.QLineEdit(Evidance)
        self.lineEdtImageName.setGeometry(QtCore.QRect(220, 270, 471, 21))
        self.lineEdtImageName.setObjectName("lineEdtImageName")
        self.lbl_ImageName = QtWidgets.QLabel(Evidance)
        self.lbl_ImageName.setGeometry(QtCore.QRect(50, 270, 111, 31))
        self.lbl_ImageName.setObjectName("lbl_ImageName")
        self.checkBox = QtWidgets.QCheckBox(Evidance)
        self.checkBox.setGeometry(QtCore.QRect(220, 320, 181, 20))
        self.checkBox.setObjectName("checkBox")
       
        self.retranslateUi(Evidance)
        QtCore.QMetaObject.connectSlotsByName(Evidance)

    def retranslateUi(self, Evidance):
        _translate = QtCore.QCoreApplication.translate
        Evidance.setWindowTitle(_translate("Evidance", "Evidance Item Information"))
        self.lbl_CaseNumber.setText(_translate("Evidance", "<html><head/><body><p><span style=\" font-size:11pt;\">Case number</span></p></body></html>"))
        self.label.setText(_translate("Evidance", "<html><head/><body><p><span style=\" font-size:11pt;\">Evidance Number</span></p></body></html>"))
        self.label_2.setText(_translate("Evidance", "<html><head/><body><p><span style=\" font-size:11pt;\">Unique Desicription</span></p></body></html>"))
        self.label_3.setText(_translate("Evidance", "<html><head/><body><p><span style=\" font-size:11pt;\">Examiner</span></p></body></html>"))
        self.label_4.setText(_translate("Evidance", "<html><head/><body><p><span style=\" font-size:11pt;\">Note</span></p></body></html>"))
        self.btnBack.setText(_translate("Evidance", "Back"))
        self.pushButton.setText(_translate("Evidance", "Next"))
        self.pushButton_2.setText(_translate("Evidance", "choose folder"))
        self.lbl_ImageName.setText(_translate("Evidance", "<html><head/><body><p><span style=\" font-size:11pt;\">Image name</span></p></body></html>"))
        self.checkBox.setText(_translate("Evidance", "Use authentication"))
    

    def on_click(self):
        import os
        path = self.getdirectory()
        for el in path:
            if os.path.exists(el):
                time.sleep(2)
                img = ImageGrab.grab()
                time_now = time.strftime("%Y%m%d%h%M%S")
                name = f"screen{time_now}"
                img.save(f"{path}/{name}.png", "png")
                name_img = name
                QMessageBox.question(self, 'Screenshot make!', f"Screenshot save in directory {path}/" + name_img,QMessageBox.Ok,QMessageBox.Ok)
                break
            else:
                try:
                    os.mkdir(path)
                except OSError:
                    time.sleep(2)
                    img = ImageGrab.grab()
                    time_now = time.strftime("%Y%m%d%h%M%S")
                    name = f"screen{time_now}"
                    img.save(f"{path}/{name}.png", "png")
                    name_img = name
                    QMessageBox.question(self, 'Screenshot make!', f"Screenshot save in directory {path}/" + name_img,QMessageBox.Ok,QMessageBox.Ok)
                    break
                else:
                    time.sleep(2)
                    img = ImageGrab.grab()
                    time_now = time.strftime("%Y%m%d%h%M%S")
                    name = f"screen{time_now}"
                    img.save(f"{path}/{name}.png", "png")
                    name_img = name
                    QMessageBox.question(self, 'Screenshot make!', f"Screenshot save in directory {path}/" + name_img,QMessageBox.Ok,QMessageBox.Ok)

                    break
        
        
            
    

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Evidance = QtWidgets.QDialog()
    ui = Ui_Evidance()
    ui.setupUi(Evidance)
    Evidance.show()
    sys.exit(app.exec_())
