# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\samar\Desktop\finalyearproject\pythonProject1\view\analysis.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget,QVBoxLayout,QGridLayout
from PyQt5 import QtCore, QtGui, QtWidgets
import PIL.ImageGrab
from PyQt5.QtWebEngineWidgets import QWebEngineView
from folium import Figure
from matplotlib import axis
#from GeographicalLocation import *
from cases import *

from socialNetwork import SocialNetwork
from testview import Window
from snapshot import*
 
from peoples import People

from viber import viber
from GeographicalLocation import MyApp

from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg 
from audioop import add
from mimetypes import init
import sys
import testcanavas

CustomObjectRole=QtCore.Qt.UserRole + 1

class Ui_DialogAnalysis(object):
    def __init__(self, ex = None):
        self.case =cases()
        super(Ui_DialogAnalysis,self).__init__()
        if ex == None:
           return
        
        self.Case = ex  
        
         
        self.activepeople = People()  
       

    @property
    def Case(self):
        return self.case

    @Case.setter
    def Case(self, value):
        self.case = value

    @property
    def activepeople(self):
        return self.activepeople
    @activepeople.setter
    def activepeople(self, value):
        self.activepeople = value
    def setupUi(self, DialogAnalysis):
        DialogAnalysis.setObjectName("DialogAnalysis")
        DialogAnalysis.resize(1477, 1003)
        self.tabWidgetBookMark = QtWidgets.QTabWidget(DialogAnalysis)
        self.tabWidgetBookMark.setGeometry(QtCore.QRect(290, 0, 1201, 941))
        self.tabWidgetBookMark.setObjectName("tabWidgetBookMark")
        self.geoloctab = QtWidgets.QWidget()
        self.geoloctab.setObjectName("geoloctab")
        self.tabWidgetBookMark.addTab(MyApp(), "Geographical location")
        self.SocialNetworktab = QtWidgets.QWidget()
        self.tabWidgetBookMark.addTab(SocialNetwork(),"SocialNetworktab")
        self.statisictap = QtWidgets.QWidget()
        self.statisictap.setObjectName("statisictap")
        self.tabWidgetBookMark.addTab(Window(),"statisic")
        self.chat_tap = QtWidgets.QWidget()
        self.chat_tap.setObjectName("chat_tap")
        self.treeView = QtWidgets.QTreeView(self.chat_tap)
        self.treeView.setGeometry(QtCore.QRect(10, 20, 901, 891))
        self.treeView.setObjectName("treeView")
        self.tabWidgetBookMark.addTab(self.chat_tap, "")
        self.tab_bookmark = QtWidgets.QWidget()
        self.tab_bookmark.setObjectName("tab_bookmark")
        self.formLayoutWidget = QtWidgets.QWidget(self.tab_bookmark)
        self.formLayoutWidget.setGeometry(QtCore.QRect(10, 10, 821, 821))
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.lbl_fileName = QtWidgets.QLabel(self.formLayoutWidget)
        self.lbl_fileName.setObjectName("lbl_fileName")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.lbl_fileName)
        self.lineEdit_fIstName = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.lineEdit_fIstName.setObjectName("lineEdit_fIstName")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.lineEdit_fIstName)
        self.label_7 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_7.setObjectName("label_7")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_7)
        self.lineEdit_Lable = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.lineEdit_Lable.setObjectName("lineEdit_Lable")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.lineEdit_Lable)
        self.label_8 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_8.setObjectName("label_8")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_8)
        self.lineEdit_BookMarkNumber = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.lineEdit_BookMarkNumber.setObjectName("lineEdit_BookMarkNumber")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.lineEdit_BookMarkNumber)
        self.label_9 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_9.setObjectName("label_9")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_9)
        self.lineEdit_from = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.lineEdit_from.setObjectName("lineEdit_from")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.lineEdit_from)
        self.label_10 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_10.setObjectName("label_10")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_10)
        self.lineEdit_to = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.lineEdit_to.setObjectName("lineEdit_to")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.lineEdit_to)
        self.label_11 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_11.setObjectName("label_11")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_11)
        self.lineEdit_CC = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.lineEdit_CC.setObjectName("lineEdit_CC")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.lineEdit_CC)
        self.label_12 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_12.setObjectName("label_12")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_12)
        self.lineEdit_Bcc = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.lineEdit_Bcc.setObjectName("lineEdit_Bcc")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.lineEdit_Bcc)
        self.lbl_AddCooment = QtWidgets.QLabel(self.formLayoutWidget)
        self.lbl_AddCooment.setObjectName("lbl_AddCooment")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.lbl_AddCooment)
        self.LnEdtAddCommant = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.LnEdtAddCommant.setObjectName("LnEdtAddCommant")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.LnEdtAddCommant)
        self.pushButton = QtWidgets.QPushButton(self.formLayoutWidget)
        self.pushButton.setObjectName("pushButton")
        self.formLayout.setWidget(8, QtWidgets.QFormLayout.SpanningRole, self.pushButton)
        self.tabWidgetBookMark.addTab(self.tab_bookmark, "")
        self.dockWidget_analysis = QtWidgets.QDockWidget(DialogAnalysis)
        self.dockWidget_analysis.setGeometry(QtCore.QRect(0, 0, 295, 941))
        self.dockWidget_analysis.setStyleSheet("q rgb(250, 235, 255)")
        self.dockWidget_analysis.setObjectName("dockWidget_analysis")
        self.dockWidgetContents_2 = QtWidgets.QWidget()
        self.dockWidgetContents_2.setObjectName("dockWidgetContents_2")
        self.groupBox_2 = QtWidgets.QGroupBox(self.dockWidgetContents_2)
        self.groupBox_2.setGeometry(QtCore.QRect(20, 400, 211, 151))
        self.groupBox_2.setObjectName("groupBox_2")
        self.radioButtonEmail = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButtonEmail.setGeometry(QtCore.QRect(30, 30, 95, 20))
        self.radioButtonEmail.setObjectName("radioButtonEmail")
        self.radioButton_whatsApp = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton_whatsApp.setGeometry(QtCore.QRect(30, 60, 95, 20))
        self.radioButton_whatsApp.setObjectName("radioButton_whatsApp")
        self.radioButton_viber = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton_viber.setGeometry(QtCore.QRect(30, 100, 95, 20))
        self.radioButton_viber.setObjectName("radioButton_viber")
        self.lineEdit_serchKeyWord_ForChat = QtWidgets.QLineEdit(self.dockWidgetContents_2)
        self.lineEdit_serchKeyWord_ForChat.setGeometry(QtCore.QRect(110, 60, 161, 31))
        self.lineEdit_serchKeyWord_ForChat.setObjectName("lineEdit_serchKeyWord_ForChat")
        self.btnKeyWordChat_2 = QtWidgets.QPushButton(self.dockWidgetContents_2)
        self.btnKeyWordChat_2.setGeometry(QtCore.QRect(10, 60, 111, 31))
        self.btnKeyWordChat_2.setObjectName("btnKeyWordChat_2")
        self.groupBox_3 = QtWidgets.QGroupBox(self.dockWidgetContents_2)
        self.groupBox_3.setGeometry(QtCore.QRect(20, 610, 211, 81))
        self.groupBox_3.setObjectName("groupBox_3")
        self.checkBox_filterKeyWord = QtWidgets.QCheckBox(self.groupBox_3)
        self.checkBox_filterKeyWord.setGeometry(QtCore.QRect(10, 20, 201, 20))
        self.checkBox_filterKeyWord.setObjectName("checkBox_filterKeyWord")
        self.checkBox_FiterTimeDate = QtWidgets.QCheckBox(self.groupBox_3)
        self.checkBox_FiterTimeDate.setGeometry(QtCore.QRect(10, 50, 171, 20))
        self.checkBox_FiterTimeDate.setObjectName("checkBox_FiterTimeDate")
        self.btnVerify = QtWidgets.QPushButton(self.dockWidgetContents_2)
        self.btnVerify.setGeometry(QtCore.QRect(30, 860, 191, 41))
        self.btnVerify.setObjectName("btnVerify")
        self.groupBox_5 = QtWidgets.QGroupBox(self.dockWidgetContents_2)
        self.groupBox_5.setGeometry(QtCore.QRect(10, 260, 271, 101))
        self.groupBox_5.setObjectName("groupBox_5")
        self.label_2 = QtWidgets.QLabel(self.groupBox_5)
        self.label_2.setGeometry(QtCore.QRect(10, 60, 55, 16))
        self.label_2.setObjectName("label_2")
        self.label = QtWidgets.QLabel(self.groupBox_5)
        self.label.setGeometry(QtCore.QRect(10, 20, 61, 20))
        self.label.setObjectName("label")
        self.dateEdit_dateFrom = QtWidgets.QDateEdit(self.groupBox_5)
        self.dateEdit_dateFrom.setGeometry(QtCore.QRect(80, 20, 110, 22))
        self.dateEdit_dateFrom.setObjectName("dateEdit_dateFrom")
        self.dateEdit_dateTo = QtWidgets.QDateEdit(self.groupBox_5)
        self.dateEdit_dateTo.setGeometry(QtCore.QRect(80, 60, 110, 22))
        self.dateEdit_dateTo.setObjectName("dateEdit_dateTo")
        self.groupBox_6 = QtWidgets.QGroupBox(self.dockWidgetContents_2)
        self.groupBox_6.setGeometry(QtCore.QRect(20, 130, 241, 80))
        self.groupBox_6.setObjectName("groupBox_6")
        self.lineEdit_Sender = QtWidgets.QLineEdit(self.groupBox_6)
        self.lineEdit_Sender.setGeometry(QtCore.QRect(70, 20, 161, 22))
        self.lineEdit_Sender.setObjectName("lineEdit_Sender")
        self.label_3 = QtWidgets.QLabel(self.groupBox_6)
        self.label_3.setGeometry(QtCore.QRect(20, 20, 55, 16))
        self.label_3.setObjectName("label_3")
        self.lineEdit_Recepian = QtWidgets.QLineEdit(self.groupBox_6)
        self.lineEdit_Recepian.setGeometry(QtCore.QRect(70, 50, 161, 22))
        self.lineEdit_Recepian.setObjectName("lineEdit_Recepian")
        self.label_4 = QtWidgets.QLabel(self.groupBox_6)
        self.label_4.setGeometry(QtCore.QRect(10, 50, 55, 21))
        self.label_4.setObjectName("label_4")
        self.label_casename = QtWidgets.QLabel(self.dockWidgetContents_2)
        self.label_casename.setGeometry(QtCore.QRect(100, 20, 81, 20))
        self.label_casename.setText("")
        self.label_casename.setObjectName("label_casename")
        self.label_6 = QtWidgets.QLabel(self.dockWidgetContents_2)
        self.label_6.setGeometry(QtCore.QRect(40, 30, 55, 16))
        self.label_6.setObjectName("label_6")
        self.label_13 = QtWidgets.QLabel(self.dockWidgetContents_2)
        self.label_13.setGeometry(QtCore.QRect(200, 30, 55, 16))
        self.label_13.setObjectName("label_13")
        self.btnSnapshot = QtWidgets.QPushButton(self.dockWidgetContents_2)
        self.btnSnapshot.setGeometry(QtCore.QRect(10, 730, 81, 51))
        self.btnSnapshot.setObjectName("btnSnapshot")
        self.btnClear = QtWidgets.QPushButton(self.dockWidgetContents_2)
        self.btnClear.setGeometry(QtCore.QRect(140, 730, 81, 51))
        self.btnClear.setObjectName("btnClear")
        self.dockWidget_analysis.setWidget(self.dockWidgetContents_2)

        

        self.retranslateUi(DialogAnalysis)
        self.tabWidgetBookMark.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(DialogAnalysis)
        
    def retranslateUi(self, DialogAnalysis):
        _translate = QtCore.QCoreApplication.translate
        DialogAnalysis.setWindowTitle(_translate("DialogAnalysis", "Dialog"))
        self.tabWidgetBookMark.setTabText(self.tabWidgetBookMark.indexOf(self.geoloctab), _translate("DialogAnalysis", "Geolocation"))
        self.tabWidgetBookMark.setTabText(self.tabWidgetBookMark.indexOf(self.SocialNetworktab), _translate("DialogAnalysis", "Social networ"))
        self.tabWidgetBookMark.setTabText(self.tabWidgetBookMark.indexOf(self.statisictap), _translate("DialogAnalysis", "statisic"))
        self.tabWidgetBookMark.setTabText(self.tabWidgetBookMark.indexOf(self.chat_tap), _translate("DialogAnalysis", "chat"))
        self.lbl_fileName.setText(_translate("DialogAnalysis", " File Name"))
        self.label_7.setText(_translate("DialogAnalysis", " Lable"))
        self.label_8.setText(_translate("DialogAnalysis", " BookMark Number"))
        self.label_9.setText(_translate("DialogAnalysis", " From"))
        self.label_10.setText(_translate("DialogAnalysis", " To"))
        self.label_11.setText(_translate("DialogAnalysis", " cc"))
        self.label_12.setText(_translate("DialogAnalysis", " BCC"))
        self.lbl_AddCooment.setText(_translate("DialogAnalysis", "Add commant"))
        self.pushButton.setText(_translate("DialogAnalysis", "Submit"))
        self.tabWidgetBookMark.setTabText(self.tabWidgetBookMark.indexOf(self.tab_bookmark), _translate("DialogAnalysis", "Bookmark"))
        self.dockWidget_analysis.setWindowTitle(_translate("DialogAnalysis", "Analysis bar"))
        self.groupBox_2.setTitle(_translate("DialogAnalysis", "plat form"))
        self.radioButtonEmail.setText(_translate("DialogAnalysis", "Email"))
        self.radioButton_whatsApp.setText(_translate("DialogAnalysis", "WhatsApp"))
        self.radioButton_viber.setText(_translate("DialogAnalysis", "Viber"))
        self.btnKeyWordChat_2.setText(_translate("DialogAnalysis", "Search keyword"))
        self.groupBox_3.setTitle(_translate("DialogAnalysis", "Filter option"))
        self.checkBox_filterKeyWord.setText(_translate("DialogAnalysis", "Filter by  keyword only"))
        self.checkBox_FiterTimeDate.setText(_translate("DialogAnalysis", "Filter by Date and time only"))
        self.btnVerify.setText(_translate("DialogAnalysis", "verify"))
        self.groupBox_5.setTitle(_translate("DialogAnalysis", "Date filtering"))
        self.label_2.setText(_translate("DialogAnalysis", "To date"))
        self.label.setText(_translate("DialogAnalysis", "From date"))
        self.groupBox_6.setTitle(_translate("DialogAnalysis", "Sender recepiant"))
        self.label_3.setText(_translate("DialogAnalysis", "Sender"))
        self.label_4.setText(_translate("DialogAnalysis", "recepiant"))
        self.label_6.setText(_translate("DialogAnalysis", "This is"))
        self.label_13.setText(_translate("DialogAnalysis", "case!"))
        self.btnSnapshot.setText(_translate("DialogAnalysis", "Snapshot"))
        self.btnClear.setText(_translate("DialogAnalysis", "clear"))
        name=['aaaa','bbbb','ccccc']
        completer = QtWidgets.QCompleter(name)
    # put the completer in
        self.lineEdit_Recepian.setCompleter(completer)

         # put the completer in
        self.lineEdit_Sender.setCompleter(completer)
        #getting the value
        self.lineEdit_Recepian.textChanged.connect(self.selectedRecepean)
        self.lineEdit_Sender.textChanged.connect(self.selectedSender)
        self.dateEdit_dateFrom.setCalendarPopup(True)
        self.dateEdit_dateFrom.setMinimumDate(QtCore.QDate(2022, 2, 2))
        self.dateEdit_dateFrom.setMaximumDate(QtCore.QDate(2022, 3, 1))
        self.dateEdit_dateFrom.dateChanged.connect(self.fromlinedittopython)
        
        # to date functionality
        self.dateEdit_dateTo.setCalendarPopup(True)
        self.dateEdit_dateTo.setMinimumDate(QtCore.QDate(2022, 2, 2))
        self.dateEdit_dateTo.setMaximumDate(QtCore.QDate(2022, 3, 1))
        self.dateEdit_dateTo.dateChanged.connect(self.fromlinedittopython)
        self.dateEdit_dateTo.dateTimeChanged.connect(lambda: DateTo(self))

        
         # to date functionality
        self.dateEdit_dateFrom.setCalendarPopup(True)
        self.dateEdit_dateFrom.setMinimumDate(QtCore.QDate(2022, 2, 2))
        self.dateEdit_dateFrom.setMaximumDate(QtCore.QDate(2022, 3, 1))
        self.dateEdit_dateFrom.dateChanged.connect(self.fromlinedittopython)
        self.dateEdit_dateFrom.dateTimeChanged.connect(lambda: DateFrom(self))
    

        self.checkBox_FiterTimeDate.stateChanged.connect(self.checked)
        self.checkBox_filterKeyWord.stateChanged.connect(self.checked)
        # the check button activity
    def checked(self):
        if self.checkBox_filterKeyWord.checkState() == 0:
            self.dateEdit_dateFrom.setEnabled(False)
            self.dateEdit_dateTo.setEnabled(False)
        if self.checkBox_filterKeyWord.checkState() == 2:
            self.dateEdit_dateFrom.setEnabled(True)
            self.dateEdit_dateTo.setEnabled(True)
        if self.checkBox_FiterTimeDate.checkState() == 0:
            self.lineEdit_serchKeyWord_ForChat.setEnabled(False)
            self.btnKeyWordChat_2.setEnabled(False)
        if self.checkBox_FiterTimeDate.checkState() == 2:
            self.lineEdit_serchKeyWord_ForChat.setEnabled(True)
            self.btnKeyWordChat_2.setEnabled(True)
        # activing radio button  
        self.radioButton_viber.toggled.connect(lambda:self.btnstate(self.radioButton_viber))
        self.radioButton_whatsApp.toggled.connect(lambda:self.btnstate(self.radioButton_whatsApp))
        self.radioButtonEmail.toggled.connect(lambda:self.btnstate(self.radioButtonEmail))
    #radio button  function
    def btnstate(self,b):
        if b.isChecked():
            if b.text()=="Email":
                 print("Email")
            if b.text()=="WhatsApp":
                 print("WhatsApp")
            if b.text()=="Viber":
                 print("Viber")

    
     
    
      
      # select a recepian
    def selectedRecepean(self):
        print(self.lineEdit_Recepian.text())
        #print(self.lineEdit_Recepian.selectedText())
    
    #select the sender
    def selectedSender(self):
        print(self.lineEdit_Sender.text())
        #print(self.lineEdit_Sender.selectedText())
    
     #grapping the date from the line edit to python program   
  

    def fromlinedittopython(self):
        return self.dateEdit_dateTo.date().toPyDate
    
    #def getthekeyword(self):
      #  self.lineEdit_serchKeyWord_ForChat.text()
      #  self.keywords=self.getthekeyword()
      #  print(type(str(self.keywords)))
        #splitkeywordsing by ,
      #  chunks =self.getthekeyword.split(',')
      #  print(chunks)

        #print(chunks)


               

    



      #def screenshoting(self):
        #im = PIL.ImageGrab.grab()
        #im.save('C:\\Users\\samar\\Desktop\\finalyearproject\\savedimag\\s.png')
        #im.show()
        #fileFilter = 'PNG (*.png)'
       # options = QtWidgets.QFileDialog.getSaveFileName(caption='select a file', directory=' ', filter=fileFilter,
                                                     #   initialFilter='PNG (*.png)')

       # if options:
          #  im.save(str(options))

#def getsavefilename(self):
      #  fileFilter = 'PNG (*.png)'
       # response = QtWidgets.QFileDialog.getSaveFileName(caption='',
                                                      #   filter=fileFilter, initialFilter=' JPG (*.png) '
                                                      #   )
       # response = QtWidgets.QFileDialog.DontUseNativeDialog
       # response = QtWidgets.QFileDialog.saveFileContent(self.screenshoting)
       # return response
#def getDirectory(self):
       # response = QFileDialog.getExistingDirectory(
           # self,
           # caption='Select a folder'
       # )
       # print(response)
       # return response

   #grap the date from the calinder popup to the line edit
    def grapaDate(self):
        self.dateEdit_dateTo.setDate()
        print("ddd")
     # selct the to date
def DateTo(self):
        print(self.dateEdit_dateTo.date())
      # select the from date
def DateFrom(self):
        print(self.dateEdit_dateFrom.date())
      
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    DialogAnalysis = QtWidgets.QDialog()
    ui = Ui_DialogAnalysis()
    ui.setupUi(DialogAnalysis)
    DialogAnalysis.show()
    sys.exit(app.exec_())
